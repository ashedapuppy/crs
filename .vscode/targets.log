make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu May  5 11:32:37 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION::WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /home/thebest/.nvm/versions/node/v18.0.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /home/thebest/code/c_rslib/lib
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code/bin/code
# environment
STARSHIP_SESSION_KEY = 2887325873163293
# 'override' directive
GNUMAKEFLAGS := 
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_CWD = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/thebest/.vscode-server/bin/dfd34e8260c270da74b5c2d86d61aee4b6d56977/bin/remote-cli:/home/thebest/.nvm/versions/node/v18.0.0/bin:/home/thebest/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Oculus/Support/oculus-runtime:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/admin/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code/bin:/home/thebest/.local/bin/
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
NVM_BIN = /home/thebest/.nvm/versions/node/v18.0.0/bin
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-49907815-5df7-416e-b75d-c12aba9acb53.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/thebest/code/c_rslib
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/9_interop
# environment
WT_SESSION = f5e59ee0-5665-42fe-987f-80c65a828466
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/thebest
# environment
LOGNAME = thebest
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 1
# default
MAKE = $(MAKE_COMMAND)
# makefile (from 'Makefile', line 3)
OUT_DYNAMIC = $(OUT).so
# environment
SHLVL = 1
# default
MAKE_VERSION := 4.2.1
# environment
USER = thebest
# makefile
.DEFAULT_GOAL := all
# environment
NAME = Code
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 2)
OUT_STATIC = $(OUT).a
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/admin/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.2
# default
MAKE_COMMAND := make
# environment
OLDPWD = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR --no-print-directory
# environment
MFLAGS = -pqrR --no-print-directory
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /home/thebest/.nvm
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
WT_PROFILE_ID = {2c4de342-38b7-51cf-b940-2309a097f518}
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# makefile (from 'Makefile', line 5)
HEADER = crs.h
# makefile (from 'Makefile', line 1)
OUT = libcrs
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
 
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu
# environment
STARSHIP_SHELL = zsh
# variable set hash-table stats:
# Load=74/1024=7%, Rehash=0, Collisions=8/104=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 328366): 8 files, no impossibilities.

# 8 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

all: build
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/3=0%
#  recipe to execute (from 'Makefile', line 8):
	@cp ./target/debug/$(OUT_STATIC) ./
	@cp ./target/debug/$(OUT_DYNAMIC) ./
	@echo "generating header file..."
	@cbindgen > $(HEADER)

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-05 11:28:47.827927576
#  File has been updated.
#  Successfully updated.

test:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 18):
	@(cargo test)

build:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := build
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=1/11=9%
#  recipe to execute (from 'Makefile', line 14):
	@echo "compiling rust library..."
	@(cargo build)

fclean: clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	$(RM) $(OUT_STATIC)
	$(RM) $(OUT_DYNAMIC)
	$(RM) $(HEADER)

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 21):
	@(cargo clean)

# files hash-table stats:
# Load=8/1024=1%, Rehash=0, Collisions=0/23=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 18 / storage = 148 B / avg = 8 B
# current buf: size = 8162 B / used = 148 B / count = 18 / avg = 8 B

# strcache performance: lookups = 29 / hit rate = 37%
# hash-table stats:
# Load=18/8192=0%, Rehash=0, Collisions=1/29=3%
# Finished Make data base on Thu May  5 11:32:37 2022

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu May  5 11:32:37 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:WT_SESSION::WT_PROFILE_ID
# default
.SHELLFLAGS := -c
# makefile (from 'Makefile', line 14)
OBJ = $(SRC:.c=.o)
# makefile (from 'Makefile', line 13)
SRC = $(addsuffix .c, $(addprefix src/, $(_SRC)))
# environment
VSCODE_LOG_NATIVE = false
# environment
 
NVM_INC = /home/thebest/.nvm/versions/node/v18.0.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 4)
CPPFLAGS = -Iinclude/
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile (from 'Makefile', line 6)
LDLIBS = -lcrs
# makefile
CURDIR := /home/thebest/code/c_rslib
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code/bin/code
# makefile (from 'Makefile', line 3)
CFLAGS = -Wall -Wextra -Werror -g3 -O2 -std=c99
# environment
STARSHIP_SESSION_KEY = 2887325873163293
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 16)
LIB_OUT = libcrs.so
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
VSCODE_CWD = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/thebest/.vscode-server/bin/dfd34e8260c270da74b5c2d86d61aee4b6d56977/bin/remote-cli:/home/thebest/.nvm/versions/node/v18.0.0/bin:/home/thebest/.cargo/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Oculus/Support/oculus-runtime:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Razer Chroma SDK/bin:/mnt/c/Program Files/Razer Chroma SDK/bin:/mnt/c/Program Files (x86)/Razer/ChromaBroadcast/bin:/mnt/c/Program Files/Razer/ChromaBroadcast/bin:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Windows/system32/config/systemprofile/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/admin/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code/bin:/home/thebest/.local/bin/
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
NVM_BIN = /home/thebest/.nvm/versions/node/v18.0.0/bin
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-49907815-5df7-416e-b75d-c12aba9acb53.sock
# makefile (from 'Makefile', line 5)
LDFLAGS = -Llib/ 
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /home/thebest/code/c_rslib
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/9_interop
# environment
WT_SESSION = f5e59ee0-5665-42fe-987f-80c65a828466
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/thebest
# environment
LOGNAME = thebest
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# makefile (from 'Makefile', line 1)
MAKE = make --no-print-directory 
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# makefile (from 'Makefile', line 2)
CC = gcc
# default
MAKE_VERSION := 4.2.1
# environment
USER = thebest
# makefile
.DEFAULT_GOAL := all
# environment
NAME = Code
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/admin/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.2
# default
MAKE_COMMAND := make
# environment
OLDPWD = /mnt/c/Users/admin/AppData/Local/Programs/Microsoft VS Code
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /home/thebest/.nvm
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# makefile (from 'Makefile', line 11)
_SRC = call_rust
# environment
WT_PROFILE_ID = {2c4de342-38b7-51cf-b940-2309a097f518}
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# makefile (from 'Makefile', line 8)
OUT = project
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from 'Makefile', line 17)
LIB_HEADER = crs.h
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu
# environment
STARSHIP_SHELL = zsh
# variable set hash-table stats:
# Load=82/1024=8%, Rehash=0, Collisions=9/117=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 40703): 11 files, no impossibilities.

# 11 files, no impossibilities in 1 directories.

# Implicit Rules

%.o: %.c
#  recipe to execute (from 'Makefile', line 44):
	@${CC} ${CFLAGS} ${CPPFLAGS} -c $< -o $@ ${LDFLAGS} ${LDLIBS}

# 1 implicit rules, 0 (0.0%) terminal.

# Files

obj_echo:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 41):
	@echo "compiling object files..."

lib_clean_header:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 60):
	$(RM) include/$(LIB_HEADER)

all: build
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/4=0%

include_dir:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 50):
	@echo "creating include directory..."
	@mkdir -p include

project: obj_echo src/call_rust.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 27):
	@echo "compiling executable..."
	@${CC} $(OBJ) -o $(OUT) ${LDFLAGS} ${LDLIBS}
	@echo "Done!"

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-05-05 11:31:34.957925323
#  File has been updated.
#  Successfully updated.

build: lib project
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/4=0%

crs:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: ''
#  Modification time never checked.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := crs
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=2/12=17%
#  recipe to execute (from 'Makefile', line 47):
	@$(MAKE) -C lib

fclean: lib_fclean src_fclean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

lib: crs include_dir
#  Implicit rule search has not been done.
#  Last modified 2022-05-05 11:31:56.047925039
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/4=0%
#  recipe to execute (from 'Makefile', line 32):
	@cp lib/$(LIB_HEADER) include

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
src/call_rust.o:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

re: fclean build
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run: re
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 23):
	

clean: lib_clean src_clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

src_fclean: src_clean
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 66):
	$(RM) $(OUT)

src_clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 63):
	$(RM) $(OBJ)

lib_fclean: lib_clean_header
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 57):
	@$(MAKE) -C lib fclean

lib_clean: lib_clean_header
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 54):
	@$(MAKE) -C lib clean

# files hash-table stats:
# Load=20/1024=2%, Rehash=0, Collisions=0/62=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 32 / storage = 273 B / avg = 8 B
# current buf: size = 8162 B / used = 273 B / count = 32 / avg = 8 B

# strcache performance: lookups = 72 / hit rate = 55%
# hash-table stats:
# Load=32/8192=0%, Rehash=0, Collisions=1/72=1%
# Finished Make data base on Thu May  5 11:32:37 2022

 
